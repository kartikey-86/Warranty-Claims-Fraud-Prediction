version: '3.8'

services:
  # Main API Service
  fraud-api:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - fraud-detection-network

  # Streamlit Dashboard Service
  fraud-dashboard:
    build: 
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
      - ./plots:/app/plots
    command: streamlit run src/visualization/dashboard.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      - fraud-api
    restart: unless-stopped
    networks:
      - fraud-detection-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # Mount SSL certificates if using HTTPS
    depends_on:
      - fraud-api
      - fraud-dashboard
    restart: unless-stopped
    networks:
      - fraud-detection-network

  # Redis for Caching (Optional)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - fraud-detection-network

  # PostgreSQL Database (Optional)
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: fraud_detection
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: fraud_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - fraud-detection-network

volumes:
  postgres-data:
  redis-data:

networks:
  fraud-detection-network:
    driver: bridge
